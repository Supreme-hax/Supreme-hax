#!/bin/bash
# manage.sh тАФ Smart Auto-Register + Server & Bot Manager
# Author: Ah + Copilot

SERVER_NAME="localengine"
SERVER_FILE="server.js"          # рждрзЛржорж╛рж░ рж╕рж╛рж░рзНржнрж╛рж░рзЗрж░ ржПржирзНржЯрзНрж░рж┐ ржлрж╛ржЗрж▓
BOT_PM2_NAME="telegram-bot"
BOT_FILE="bot.js"                # рждрзЛржорж╛рж░ ржмржЯрзЗрж░ ржПржирзНржЯрзНрж░рж┐ ржлрж╛ржЗрж▓

BOT_NAME="S I G N A L Paid ЁЯУб"
BOTUSERNAME="@signalphaxosbot"
API_TOKEN="8487342536:AAEJGmLxNnUr560dDdTzlnZttubwLAJck"

BACKUP_DIR="backup"
DATE=$(date +"%Y-%m-%d_%H-%M-%S")

# .env ржлрж╛ржЗрж▓ ржЖржкржбрзЗржЯ
update_env() {
  echo "BOT_NAME=\"$BOT_NAME\"" > .env
  echo "BOTUSERNAME=\"$BOTUSERNAME\"" >> .env
  echo "API_TOKEN=\"$API_TOKEN\"" >> .env
  echo "тЬЕ .env ржлрж╛ржЗрж▓ ржЖржкржбрзЗржЯ рж╣ржпрж╝рзЗржЫрзЗ"
}

# ржкрзНрж░рж╕рзЗрж╕ ржЖржЫрзЗ ржХрж┐ржирж╛ ржЪрзЗржХ
process_exists() {
  pm2 describe "$1" > /dev/null 2>&1
}

case "$1" in
  start)
    update_env
    echo "ЁЯЪА рж╕рж╛рж░рзНржнрж╛рж░ ржУ ржмржЯ ржЪрж╛рж▓рзБ рж╣ржЪрзНржЫрзЗ..."
    if ! process_exists "$SERVER_NAME"; then
      pm2 start "$SERVER_FILE" --name "$SERVER_NAME"
    else
      pm2 start "$SERVER_NAME"
    fi
    if ! process_exists "$BOT_PM2_NAME"; then
      pm2 start "$BOT_FILE" --name "$BOT_PM2_NAME" --update-env
    else
      pm2 start "$BOT_PM2_NAME" --update-env
    fi
    pm2 save
    ;;
  stop)
    echo "ЁЯЫС рж╕рж╛рж░рзНржнрж╛рж░ ржУ ржмржЯ ржмржирзНржз рж╣ржЪрзНржЫрзЗ..."
    pm2 stop "$SERVER_NAME" 2>/dev/null
    pm2 stop "$BOT_PM2_NAME" 2>/dev/null
    ;;
  restart)
    update_env
    echo "тЩ╗я╕П рж╕рж╛рж░рзНржнрж╛рж░ ржУ ржмржЯ рж░рж┐рж╕рзНржЯрж╛рж░рзНржЯ рж╣ржЪрзНржЫрзЗ..."
    if process_exists "$SERVER_NAME"; then
      pm2 restart "$SERVER_NAME"
    else
      pm2 start "$SERVER_FILE" --name "$SERVER_NAME"
    fi
    if process_exists "$BOT_PM2_NAME"; then
      pm2 restart "$BOT_PM2_NAME" --update-env
    else
      pm2 start "$BOT_FILE" --name "$BOT_PM2_NAME" --update-env
    fi
    pm2 save
    ;;
  logs)
    echo "ЁЯУЬ рж▓рж╛ржЗржн рж▓ржЧ ржжрзЗржЦрж╛ рж╣ржЪрзНржЫрзЗ..."
    pm2 logs
    ;;
  status)
    echo "ЁЯУК ржкрзНрж░рж╕рзЗрж╕ рж╕рзНржЯрзНржпрж╛ржЯрж╛рж╕:"
    pm2 status
    ;;
  backup)
    echo "ЁЯТ╛ ржмрзНржпрж╛ржХржЖржк рждрзИрж░рж┐ рж╣ржЪрзНржЫрзЗ..."
    mkdir -p "$BACKUP_DIR"
    zip -r "$BACKUP_DIR/project_$DATE.zip" . -x "$BACKUP_DIR/*"
    echo "тЬЕ ржмрзНржпрж╛ржХржЖржк рж╕ржВрж░ржХрзНрж╖рж┐ржд: $BACKUP_DIR/project_$DATE.zip"
    ;;
  restore)
    if [ -z "$2" ]; then
      echo "тЭМ рж░рж┐рж╕рзНржЯрзЛрж░ ржХрж░рждрзЗ ржмрзНржпрж╛ржХржЖржк ржлрж╛ржЗрж▓рзЗрж░ ржирж╛ржо ржжрж┐ржи"
      echo "ржЙржжрж╛рж╣рж░ржг: ./manage.sh restore backup/project_2025-08-26_21-44-00.zip"
    else
      echo "тЩ╗я╕П ржмрзНржпрж╛ржХржЖржк рж░рж┐рж╕рзНржЯрзЛрж░ рж╣ржЪрзНржЫрзЗ..."
      unzip -o "$2" -d .
      echo "тЬЕ рж░рж┐рж╕рзНржЯрзЛрж░ рж╕ржорзНржкржирзНржи"
    fi
    ;;
  *)
    echo "ржмрзНржпржмрж╣рж╛рж░: ./manage.sh {start|stop|restart|logs|status|backup|restore <file>}"
    ;;
esac
